{"version":3,"sources":["images/mail.svg","images/paper-plane.svg","components/CompletedRequest.js","components/CompletedRequests.js","components/HeroSpacer.js","components/Login.js","components/Logout.js","components/Register.js","components/LoginSystem.js","components/Request.js","components/CheckoutForm.js","components/SuperUser.js","components/UsersCompletedRequests.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CompletedRequest","props","react_default","a","createElement","className","key","data","id","sender_name","title","request_contents","recipient_name","reply","CompletedRequests","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","list","fetch","then","r","json","_this2","setState","map","item","index","components_CompletedRequest","Component","HeroSpacer","src","mail","alt","paperPlane","Login","action","method","type","name","required","value","Logout","Register","LoginSystem","_isClickedLogin","loginOpen","registerOpen","_isClickedRegister","loggedIn","displayName","catch","err","console","log","displayname","components_Logout","Fragment","onClick","components_Login","components_Register","Link","to","Request","CheckoutForm","_onChangeSuperUser","e","selected_super_user","target","_onChangePrivate","is_private","_onChangeTitle","event","_onChangeBody","body_contents","stripe_token","super_users_list","complete","submit","bind","assertThisInitialized","ev","window","StripeCheckout","configure","locale","image","concat","plane","token","headers","Content-Type","body","JSON","stringify","email","response","ok","_this3","text_body","super_user","open","description","zipCode","amount","onChange","placeholder","selected","disabled","hidden","user","SuperUser","_onChangeRequestID","requestIdToReplyTo","_onChangeReply","replyBody","_onSubmit","preventDefault","length","alert","REQUESTS_ID","location","replace","onSubmit","form","request","components_Request","UsersCompletedRequests","z","Dashboard","isSuper","dataSource","toConsumableArray","v","is_super","components_SuperUser","components_CheckoutForm","components_UsersCompletedRequests","App","BrowserRouter","components_LoginSystem","Route","path","exact","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6RCmBzBC,EAjBU,SAACC,GACxB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBC,IAAKL,EAAMM,KAAKC,IACjDN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACdH,EAAAC,EAAAC,cAAA,SACGH,EAAMM,KAAKE,YADd,KAC6BR,EAAMM,KAAKG,MACtCR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAGjBH,EAAAC,EAAAC,cAAA,SAAIH,EAAMM,KAAKI,kBACfT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACrCJ,EAAMM,KAAKK,eADd,KACgCX,EAAMM,KAAKM,SCiBlCC,cA1Bb,SAAAA,EAAYb,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMjB,KACDqB,MAAQ,CACXC,KAAM,IAHSR,sNAOXS,MAAK,0BACRC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,OACVF,KAAK,SAAAlB,GACJqB,EAAKC,SAAS,CACZN,KAAMhB,2IAKd,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZa,KAAKI,MAAMC,KAAKO,IAAI,SAACC,EAAMC,GAC1B,OAAQ9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAkB3B,IAAK0B,EAAOzB,KAAMwB,cApBtBG,+CCiCjBC,cA9Bb,SAAAA,EAAYlC,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiB,IACjBpB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmB,GAAAd,KAAAH,KAAMjB,KACDqB,MAAQ,CACXC,KAAM,IAHSR,wEAOjB,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,OAAKI,GAAG,UAAU4B,IAAKC,IAAMC,IAAI,+BAEjCpC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,yHAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKgC,IAAKG,IAAYD,IAAI,6CAC1BpC,EAAAC,EAAAC,cAAA,gIAEAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,+DAtBe6B,qBCiBVM,EAnBD,SAACvC,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,uBACAH,EAAAC,EAAAC,cAAA,QAAMqC,OAAO,aAAaC,OAAO,QAC/BxC,EAAAC,EAAAC,cAAA,+BACiBF,EAAAC,EAAAC,cAAA,WACfF,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,QAAQC,KAAK,QAAQC,UAAQ,KACnC3C,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,yBACWF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,WAAWC,KAAK,WAAWC,UAAQ,KAPnD,IAQW3C,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcsC,KAAK,SAASG,MAAM,cCN5CC,EARA,SAAC9C,GACd,OACEC,EAAAC,EAAAC,cAAA,QAAMqC,OAAO,UAAUC,OAAO,QAC5BxC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BAA2BsC,KAAK,SAASG,MAAM,aCuBvDE,EA1BE,SAAC/C,GAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,qDACAH,EAAAC,EAAAC,cAAA,QAAMqC,OAAO,gBAAgBC,OAAO,QAClCxC,EAAAC,EAAAC,cAAA,8BACgBF,EAAAC,EAAAC,cAAA,WACdF,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,QAAQC,KAAK,QAAQC,UAAQ,KAE3C3C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6BACeF,EAAAC,EAAAC,cAAA,WACbF,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,OAAOC,KAAK,OAAOC,UAAQ,KAEzC3C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACWF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,WAAWC,KAAK,WAAWC,UAAQ,KAEjD3C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcsC,KAAK,SAASG,MAAM,gBC4C5CG,cA1Db,SAAAA,EAAYhD,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IACjBlC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,KAAMjB,KA4BRiD,gBAAkB,WAChBnC,EAAKc,SAAS,CACZsB,WAAYpC,EAAKO,MAAM6B,UACvBC,cAAc,KAhCCrC,EAmCnBsC,mBAAqB,WACnBtC,EAAKc,SAAS,CACZuB,cAAerC,EAAKO,MAAM8B,aAC1BD,WAAW,KApCbpC,EAAKO,MAAQ,CACXgC,UAAU,EACVC,YAAa,KACbJ,WAAW,EACXC,cAAc,GANCrC,sNAUXS,MAAM,iBACTgC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,KAEbhC,KAAK,SAAAC,GACJ,OAAQA,EAAEC,SAEXF,KAAK,SAAAlB,GACAA,EACFqB,EAAKC,SAAS,CACZ+B,YAAarD,EAAKqC,KAClBU,UAAU,IAGZI,QAAQC,IAAI,mJAmBlB,OACEzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACXa,KAAKI,MAAMgC,SAAWpD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAACyD,EAAD,OAAkB3D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,KAAE5D,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ2D,QAAS7C,KAAKgC,iBAAtB,UAA0DhD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ2D,QAAS7C,KAAKmC,oBAAtB,cACvInC,KAAKI,MAAM6B,UAAYjD,EAAAC,EAAAC,cAAC4D,EAAD,MAAY9D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,MACnC5C,KAAKI,MAAM8B,aAAelD,EAAAC,EAAAC,cAAC6D,EAAD,MAAe/D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,MACzC5C,KAAKI,MAAMgC,SAAWpD,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAM7D,UAAU,UAAU8D,GAAG,cAA7B,eAAoEjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,MAC/F5C,KAAKI,MAAMgC,SAAWpD,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAM7D,UAAU,UAAU8D,GAAG,KAA7B,UAAsDjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,eAnDlE5B,qBCSXkC,EAdC,SAACnE,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMO,GAAIH,UAAU,gBAC5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACZJ,EAAMM,KAAKE,YADd,KAC6BR,EAAMM,KAAKG,OAExCR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAIH,EAAMM,KAAKI,mBAEjBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,eAAgDJ,EAAMM,KAAKK,0BC+IlDyD,cAtJb,SAAAA,EAAYpE,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,IACjBtD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqD,GAAAhD,KAAAH,KAAMjB,KAoHRqE,mBAAqB,SAACC,GACpBxD,EAAKc,SAAS,CACZ2C,oBAAqBD,EAAEE,OAAO3B,SAvHf/B,EA4HnB2D,iBAAmB,SAACH,GACK,eAAnBA,EAAEE,OAAO3B,MACX/B,EAAKc,SAAS,CACZ8C,YAAY,IAEc,YAAnBJ,EAAEE,OAAO3B,OAClB/B,EAAKc,SAAS,CACZ8C,YAAY,KAnIC5D,EAyInB6D,eAAiB,SAACC,GAChB9D,EAAKc,SAAS,CACZnB,MAAOmE,EAAMJ,OAAO3B,SA3IL/B,EA+InB+D,cAAgB,SAACP,GACfxD,EAAKc,SAAS,CACZkD,cAAeR,EAAEE,OAAO3B,SA/I1B/B,EAAKO,MAAQ,CACXZ,MAAO,GACPqE,cAAe,GACfJ,YAAY,EACZK,aAAc,GACdC,iBAAkB,GAClBT,oBAAqB,KACrBU,UAAU,GAEZnE,EAAKoE,OAASpE,EAAKoE,OAAOC,KAAZpE,OAAAqE,EAAA,EAAArE,QAAAqE,EAAA,EAAArE,CAAAD,KAXGA,sNAgBXS,MAAM,uBACTC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZF,KAAK,SAAAlB,GACJqB,EAAKC,SAAS,CACZoD,iBAAkB1E,+KAKb+E,8FACSC,OAAOC,eAAeC,UAAU,CAClDnF,IAAK,mCACLoF,OAAQ,OACRC,MAAK,GAAAC,OAAKC,KACVC,MAAO,SAACA,GACNtE,MAAM,UAAW,CACfkB,OAAQ,OACRqD,QAAS,CAAEC,eAAgB,mCAC3BC,KAAMC,KAAKC,UAAU,CACnB5F,KAAMuF,EAAMtF,GACZ4F,MAAON,EAAMM,UAGd3E,KAAK,SAAC4E,GACL3C,QAAQC,IAAI0C,GAGRA,EAASC,IACXC,EAAK1E,SAAS,CAAEqD,UAAU,IAIxBmB,EAASC,IACX9E,MAAM,oBAAqB,CACzBkB,OAAQ,OACRuD,KAAMC,KAAKC,UAAU,CACnBzF,MAAO6F,EAAKjF,MAAMZ,MAClB8F,UAAWD,EAAKjF,MAAMyD,cACtBJ,WAAY4B,EAAKjF,MAAMqD,WACvBK,aAAcc,EAAMtF,GACpBiG,WAAYF,EAAKjF,MAAMkD,sBAEzBuB,QAAS,CACPC,eAAgB,wDAQtBU,KAAK,CACX9D,KAAM,mBACN+D,YAAa,2BACbC,SAAS,EACTC,OAAQ,0IAKV,OAAI3F,KAAKI,MAAM4D,SAAiBhF,EAAAC,EAAAC,cAAA,MAAII,GAAG,sBAAP,+BAE9BN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,sBACQF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,SAAO0C,MAAO5B,KAAKI,MAAMZ,MAAOoG,SAAU5F,KAAK0D,eAAgBjC,KAAK,OAAOC,KAAK,QAAQmE,YAAY,0BAA0BlE,UAAQ,KAChI3C,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,QACOH,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,YAAUwC,KAAK,YAAYE,MAAO5B,KAAKI,MAAMyD,cAAe+B,SAAU5F,KAAK4D,cAAeiC,YAAY,6CAA6ClE,UAAQ,KAP/J,IAQW3C,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,gCACEF,EAAAC,EAAAC,cAAA,UAAQwC,KAAK,aAAakE,SAAU5F,KAAKwD,kBACvCxE,EAAAC,EAAAC,cAAA,UAAQ0C,MAAM,GAAGkE,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,eACAhH,EAAAC,EAAAC,cAAA,UAAQ0C,MAAM,cAAd,eACA5C,EAAAC,EAAAC,cAAA,UAAQ0C,MAAM,WAAd,aAGJ5C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BACEF,EAAAC,EAAAC,cAAA,UAAQwC,KAAK,aAAakE,SAAU5F,KAAKoD,oBACvCpE,EAAAC,EAAAC,cAAA,UAAQ0C,MAAM,GAAGkE,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,eACChG,KAAKI,MAAM2D,iBAAiBnD,IAAI,SAAAqF,GAC/B,OAAQjH,EAAAC,EAAAC,cAAA,UAAQ0C,MAAOqE,EAAK3G,IAAK2G,EAAKvE,UAI5C1C,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,kBACEF,EAAAC,EAAAC,cAAA,2KAEFF,EAAAC,EAAAC,cAAA,sDAEAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAc0D,QAAS7C,KAAKiE,QAA9C,gBAhHmBjD,aCwGZkF,cAtGb,SAAAA,EAAYnH,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkG,IACjBrG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoG,GAAA/F,KAAAH,KAAMjB,KAgERoH,mBAAqB,SAACxC,GACpB9D,EAAKc,SAAS,CACZyF,mBAAoBzC,EAAMJ,OAAO3B,QAEnCY,QAAQC,IAAIkB,EAAMJ,OAAO3B,QArER/B,EAwEnBwG,eAAiB,SAAC1C,GAChB9D,EAAKc,SAAS,CACZ2F,UAAW3C,EAAMJ,OAAO3B,SA1ET/B,EA6EnB0G,UAAY,SAAC5C,GACXA,EAAM6C,iBACF3G,EAAKO,MAAMkG,UAAUG,QAAU,GACjCC,MAAM,8CAENpG,MAAM,mBAAoB,CACxBkB,OAAQ,OACRuD,KAAMC,KAAKC,UAAU,CAEnB0B,YAAa9G,EAAKO,MAAMgG,mBACxBzG,MAAOE,EAAKO,MAAMkG,YAEpBzB,QAAS,CACPC,eAAgB,qCAGnBvE,KAAK,SAAAC,GACJ,OAAO6D,OAAOuC,SAASC,QAAQ,QA5FnChH,EAAKO,MAAQ,CACXC,KAAM,GACNiG,UAAW,GACXF,mBAAoB,GALLvG,sNAWXS,MAAM,uBACTgC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,KAEbhC,KAAK,SAAAC,GACJ,OAAQA,EAAEC,SAEXF,KAAK,SAAAlB,GAIJ,OAHAqB,EAAKC,SAAS,CACZN,KAAMhB,IAEDA,uIAMX,OACEL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,KACE5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,QAAM4H,SAAU9G,KAAKuG,WACjBvH,EAAAC,EAAAC,cAAA,0BACFF,EAAAC,EAAAC,cAAA,UAAQwC,KAAK,cAAckE,SAAU5F,KAAKmG,oBACpCnH,EAAAC,EAAAC,cAAA,UAAQ0C,MAAM,GAAGkE,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,eACChG,KAAKI,MAAMC,KAAKO,IAAI,SAAAC,GACnB,OAAQ7B,EAAAC,EAAAC,cAAA,UAAQ0C,MAAOf,EAAKvB,IAAKuB,EAAKrB,WAI5CR,EAAAC,EAAAC,cAAA,sBAEEF,EAAAC,EAAAC,cAAA,YAAU0C,MAAO5B,KAAKI,MAAMkG,UAAWT,YAAY,6BAA4BD,SAAU5F,KAAKqG,eAAgB3E,KAAK,aAAaqF,KAAK,UAAUpF,UAAQ,KAEzJ3C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcsC,KAAK,UAArC,YAIJzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,gEACFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAGXa,KAAKI,MAAMC,KAAKO,IAAI,SAAAoG,GAClB,OAAOhI,EAAAC,EAAAC,cAAC+H,EAAD,CAAS5H,KAAM2H,gBA1DZhG,aC0BTkG,cA1Bb,SAAAA,EAAYnI,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkH,IACjBrH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoH,GAAA/G,KAAAH,KAAMjB,KACDqB,MAAQ,CACXC,KAAM,IAHSR,sNAOXS,MAAK,+BACRC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZF,KAAK,SAAA4G,GACJzG,EAAKC,SAAS,CACZN,KAAM8G,yIAKZ,OACEnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZa,KAAKI,MAAMC,KAAKO,IAAI,SAAAC,GACnB,OAAQ7B,EAAAC,EAAAC,cAAC6B,EAAD,CAAkB1B,KAAMwB,cApBLG,aCyFtBoG,cApFb,SAAAA,EAAYrI,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoH,IACjBvH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsH,GAAAjH,KAAAH,KAAMjB,KACDqB,MAAQ,CACXsC,YAAa,GACb2E,SAAS,EACTjF,UAAU,EACV/B,KAAM,IANSR,sNAUXS,MAAM,sBACTgC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KACzBhC,KAAK,SAAAC,GACJ,OAAQA,EAAEC,SAEXF,KAAK,SAAA+G,GAIJ,OAHA5G,EAAKC,SAAS,CACZN,KAAI,GAAAqE,OAAA5E,OAAAyH,EAAA,EAAAzH,CAAMwH,GAANxH,OAAAyH,EAAA,EAAAzH,CAAqBY,EAAKN,MAAMC,SAE/BiH,IAER/G,KAAK,SAAA4G,GACJ7G,MAAM,iBACHgC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,KAEbhC,KAAK,SAAAiH,GACJ,OAAQA,EAAE/G,SAEXF,KAAK,SAAAlB,GACAA,EACFqB,EAAKC,SAAS,CACZ+B,YAAarD,EAAKqC,KAClBU,UAAU,IAGZI,QAAQC,IAAI,cAEVpD,EAAKoI,UACP/G,EAAKC,SAAS,CACZ0G,SAAS,yIAOhBtI,GACL,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,KACE5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZa,KAAKI,MAAMiH,SAAWrI,EAAAC,EAAAC,cAACwI,EAAD,OAEzB1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACyI,EAAD,OAEF3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAC0I,EAAD,OAEF5I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZa,KAAKI,MAAMC,KAAKO,IAAI,SAAAoG,GACnB,OAAOhI,EAAAC,EAAAC,cAAC+H,EAAD,CAAS7H,IAAK4H,EAAQ1H,GAAID,KAAM2H,gBAjE7BhG,aCsBT6G,mLAbX,OACE7I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACE9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6I,EAAD,MACA/I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWlH,IACjCjC,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWvI,IACjCZ,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWf,aARlCpG,aCFEoH,QACW,cAA7B/D,OAAOuC,SAASyB,UAEe,UAA7BhE,OAAOuC,SAASyB,UAEhBhE,OAAOuC,SAASyB,SAASC,MACvB,2DCZNC,IAASC,OAAOxJ,EAAAC,EAAAC,cAACuJ,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvI,KAAK,SAAAwI,GACjCA,EAAaC","file":"static/js/main.9f96389f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mail.ac247e4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/paper-plane.cc90408c.svg\";","import React from 'react'\n\nconst CompletedRequest = (props) => {\n  return (\n    <div className='completed-request' key={props.data.id}>\n      <span className='blueText'>\n        <p>\n          {props.data.sender_name}: {props.data.title}\n          <i className=\"fas fa-paper-plane\"></i>\n        </p>\n      </span>\n      <p>{props.data.request_contents}</p>\n      <p className='receiveText'><i className=\"fas fa-check\"></i>\n        {props.data.recipient_name}: {props.data.reply}\n      </p>\n    </div>\n  )\n}\n\nexport default CompletedRequest","import React, { Component } from 'react';\nimport CompletedRequest from './CompletedRequest';\n\nclass CompletedRequests extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    }\n  }\n  async componentDidMount() {\n    await fetch(`/api/completedRequests`)\n      .then(r => r.json()\n        .then(data => {\n          this.setState({\n            list: data\n          })\n        }))\n  }\n  render() {\n    return (\n      <div className='completed-requests'>\n        {this.state.list.map((item, index) => {\n          return (<CompletedRequest key={index} data={item} />)\n        })}\n      </div>\n    )\n  }\n}\n\nexport default CompletedRequests;","import React, { Component } from 'react';\n\nimport mail from '../images/mail.svg';\nimport paperPlane from '../images/paper-plane.svg';\n\nclass HeroSpacer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    }\n  }\n  render() {\n    return (\n      <div className='heroImage'>\n        <div className='heroTextWrapper'>\n        <div className='heroTextP'>\n        <div className='heroTextImg'>\n          <p> Buy-a-Compliment.xyz is a site to connect you to people that care.</p>\n          <img id='mailImg' src={mail} alt='icon of paperplane flying' />\n        </div>\n          <p className='heroTextBlock'>Sign-up to make requests to users that care. You can make your requests public or private. View sample items below!  </p>\n          {/* <p>The recipient can then respond to the user</p> */}\n          <div className='heroTextImg'>\n          <img src={paperPlane} alt='icon of stick figurethrowing paper plane' />\n          <p> Recipients can then respond to the user and share in the interaction fee! All request interactions are only $1.00</p>\n        </div>\n          <p className='heroTextBlock'>Sign up to become a member of the community now! </p>\n        </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default HeroSpacer","import React from 'react'\n\n\nconst Login = (props) => {\n  return (\n    <div className='nav-login'>\n      <p className='modal-text'>Please Log in below</p>\n      <form action='/api/login' method='POST' >\n        <label>\n          Email address: <br />\n          <input type='email' name='email' required />\n        </label><br />\n        <label>\n          Password:<br />\n          <input type=\"password\" name=\"password\" required />\n        </label> <br />\n        <input className='buttonStyle' type=\"submit\" value=\"submit\" />\n      </form>\n    </div>\n  )\n}\n\nexport default Login","import React from 'react';\n// log out button for registration Component\nconst Logout = (props) => {\n  return (\n    <form action='/logout' method='POST' >\n      <input className=\"logoutButton buttonStyle\" type=\"submit\" value=\"Logout\" />\n    </form>\n  )\n}\n\nexport default Logout;","import React from 'react'\n\nconst Register = (props) => {\n  return (\n    <div className='nav-register'>\n      <p className='modal-text'>Please Fill Out the Information Below to Register</p>\n      <form action=\"/api/register\" method=\"POST\">\n        <label>\n          Email address:<br />\n          <input type=\"email\" name=\"email\" required />\n        </label>\n        <br />\n        <label>\n          Display name:<br />\n          <input type=\"text\" name=\"name\" required />\n        </label>\n        <br />\n        <label>\n          Password:<br />\n          <input type=\"password\" name=\"password\" required />\n        </label>\n        <br />\n        <input className='buttonStyle' type=\"submit\" value=\"Register\" />\n      </form >\n    </div>\n  )\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nimport Login from './Login';\nimport Logout from './Logout';\nimport Register from './Register';\n\nclass LoginSystem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      displayName: null,\n      loginOpen: false,\n      registerOpen: false,\n    }\n  }\n  async componentDidMount() {\n    await fetch('/api/loggedin')\n      .catch(err => {\n        console.log(err)\n      })\n      .then(r => {\n        return (r.json());\n      })\n      .then(data => {\n        if (data) {\n          this.setState({\n            displayname: data.name,\n            loggedIn: true\n          })\n        } else {\n          console.log('move along');\n        }\n      })\n  }\n\n  _isClickedLogin = () => {\n    this.setState({\n      loginOpen: !this.state.loginOpen,\n      registerOpen: false\n    })\n  }\n  _isClickedRegister = () => {\n    this.setState({\n      registerOpen: !this.state.registerOpen,\n      loginOpen: false\n    })\n  }\n\n  render() {\n    return (\n      <div className='login-div'>\n        <ul className='login-system-ul'>\n          {this.state.loggedIn ? <li className='nav-logout'><Logout /></li> : <><li><button onClick={this._isClickedLogin}>Login</button></li><li><button onClick={this._isClickedRegister}>Register</button></li></>}\n          {this.state.loginOpen ? <Login /> : <></>}\n          {this.state.registerOpen ? <Register /> : <></>}\n          {this.state.loggedIn ? <li> <Link className='navLink' to='/dashboard' >Dashboard </Link></li> : <></>}\n          {this.state.loggedIn ? <li> <Link className='navLink' to='/' >Home </Link></li> : <></>}\n        </ul>\n      </div>\n    )\n  }\n}\n\n\nexport default LoginSystem;","import React from 'react';\n\nconst Request = (props) => {\n  return (\n    <div key={props.id} className='request-card'>\n      <div className='request-title blueText'>\n        {props.data.sender_name}: {props.data.title}\n      </div>\n      <div className='request-body'>\n        <p>{props.data.request_contents}</p>\n      </div>\n      <div className='request-recipient'>Assigned to:{props.data.recipient_name}</div>\n    </div>\n  )\n}\n\nexport default Request;","import React, { Component } from 'react';\nimport plane from '../images/mail.svg'\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body_contents: '',\n      is_private: false,\n      stripe_token: '',\n      super_users_list: [],\n      selected_super_user: null,\n      complete: false\n    }\n    this.submit = this.submit.bind(this);\n  }\n\n  //fetch a list of all super user names to have requests assigned to.\n  async componentDidMount() {\n    await fetch('/api/superUsersList')\n      .then(r => r.json())\n      .then(data => {\n        this.setState({\n          super_users_list: data\n        })\n      })\n  }\n\n  async submit(ev) {\n    let handler = await window.StripeCheckout.configure({\n      key: 'pk_test_tYRNrX4cgaDufHFLDWagpMUG',\n      locale: 'auto',\n      image: `${plane}`,\n      token: (token) => {\n        fetch(\"/charge\", {\n          method: \"POST\",\n          headers: { 'Content-Type': 'application/json; charset=utf-8' },\n          body: JSON.stringify({\n            data: token.id,\n            email: token.email\n          })\n        })\n          .then((response) => {\n            console.log(response)\n            // IF RESPONSE IS GOOD \n            // set state to completed\n            if (response.ok) {\n              this.setState({ complete: true });\n            }\n            // send post request with form information to be written into the DB\n            // with stripe token as a receipt_id for backend db\n            if (response.ok) {\n              fetch('/api/userRequests', {\n                method: 'POST',\n                body: JSON.stringify({\n                  title: this.state.title,\n                  text_body: this.state.body_contents,\n                  is_private: this.state.is_private,\n                  stripe_token: token.id,\n                  super_user: this.state.selected_super_user\n                }),\n                headers: {\n                  'Content-Type': 'application/json; charset=utf-8'\n                }\n              })\n            }\n\n          });\n      }\n    });\n    handler.open({\n      name: \"Buy a Compliment\",\n      description: 'Classic Compliment order',\n      zipCode: true,\n      amount: 100 //the total is in pennies\n    })\n  }\n\n  render() {\n    if (this.state.complete) return <h1 id='completed-purchase'>Thank you for your purchase</h1>\n    return (\n      <div className=\"checkout\">\n        <label>\n          Title:<br />\n          <input value={this.state.title} onChange={this._onChangeTitle} type='text' name='title' placeholder='Ex. This is my story...' required></input>\n        </label><br />\n        <label className='form-text-area'>\n          Body:<br />\n          <textarea name=\"text_body\" value={this.state.body_contents} onChange={this._onChangeBody} placeholder='I have been having a hard time recently...' required />\n        </label> <br />\n        <label>Is this private?\n          <select name=\"is_private\" onChange={this._onChangePrivate}>\n            <option value=\"\" selected disabled hidden>Choose here</option>\n            <option value='notPrivate'>Not Private</option>\n            <option value='private'>Private</option>\n          </select>\n        </label>\n        <br />\n        <label>Who to send to?\n          <select name=\"super_user\" onChange={this._onChangeSuperUser}>\n            <option value=\"\" selected disabled hidden>Choose here</option>\n            {this.state.super_users_list.map(user => {\n              return (<option value={user.id}>{user.name}</option>)\n            })}\n          </select>\n        </label>\n        <br />\n        {/* this area will show the terms to agree to and the $1 purchase ammount */}\n        <div className='checkout-terms'>\n        <p>Terms</p>\n          <p>For $1.00 you may send a message to one of the listed people to receive feedback on your problem, issue, or just to chat! Click below to checkout with Stripe</p>\n        </div>\n        <h4>Would you like to complete the purchase?</h4>\n        {/* <CardElement /> */}\n        <button className='buttonStyle' onClick={this.submit}>Send</button>\n      </div>\n    );\n  }\n\n  // designate which super user to assign request to\n  _onChangeSuperUser = (e) => {\n    this.setState({\n      selected_super_user: e.target.value\n    })\n  }\n\n  //handler for changing the IS_PRIVATE field/state\n  _onChangePrivate = (e) => {\n    if (e.target.value === 'notPrivate') {\n      this.setState({\n        is_private: false\n      })\n    } else if (e.target.value === 'private') {\n      this.setState({\n        is_private: true\n      })\n    }\n  }\n\n  //handler for changing TITLE field/state\n  _onChangeTitle = (event) => {\n    this.setState({\n      title: event.target.value\n    })\n  }\n  //handler for changing BODY_CONTENTS field/state\n  _onChangeBody = (e) => {\n    this.setState({\n      body_contents: e.target.value\n    })\n  }\n}\n\nexport default CheckoutForm;","import React, { Component } from 'react';\n\nimport Request from './Request';\n\nclass SuperUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      replyBody: '',\n      requestIdToReplyTo: 0\n    }\n  }\n\n  //fetch requests of USER_ID_TO of currently logged in user if they havent been responded to\n  async componentDidMount() {\n    await fetch('/api/requestsToUser')\n      .catch(err => {\n        console.log(err)\n      })\n      .then(r => {\n        return (r.json());\n      })\n      .then(data => {\n        this.setState({\n          list: data\n        })\n        return data;\n      })\n  }\n  //display below\n  //each of these should have the ability to be responded to\n  render() {\n    return (\n      <>\n        <div className='replies-form'>\n        <p>Reply to your requests</p>\n        <form onSubmit={this._onSubmit}>\n            <div>Replying to:\n          <select name=\"idToReplyTo\" onChange={this._onChangeRequestID}>\n                <option value=\"\" selected disabled hidden>Choose here</option>\n                {this.state.list.map(item => {\n                  return (<option value={item.id}>{item.title}</option>)\n                })}\n              </select>\n            </div>\n            <label>\n              Reply:\n              <textarea value={this.state.replyBody} placeholder='Must be 100 characters min'onChange={this._onChangeReply} name=\"reply_body\" form=\"usrform\" required></textarea>\n            </label>\n            <br />\n            <div className='button-div'>\n            <button className='buttonStyle' type='submit' > Send</button>\n            </div>\n          </form>\n        </div>\n        <div className='super-user-requests'>\n          <h4>Here are your current pending requests to reply to</h4>\n        <div className='replies request-wrapper'>\n          {\n            // take data from state and map it into reusable card component.\n            this.state.list.map(request => {\n              return <Request data={request} />\n            })\n          }\n        </div>\n          </div>\n      </>\n    )\n  }\n  _onChangeRequestID = (event) => {\n    this.setState({\n      requestIdToReplyTo: event.target.value\n    })\n    console.log(event.target.value)\n  }\n\n  _onChangeReply = (event) => {\n    this.setState({\n      replyBody: event.target.value\n    })\n  }\n  _onSubmit = (event) => {\n    event.preventDefault()\n    if (this.state.replyBody.length <= 99){\n      alert('Your reply must be 100 characters or more!')\n    } else{\n      fetch('/api/submitReply', {\n        method: 'POST',\n        body: JSON.stringify({\n          // (USER_ID_FROM, REQUESTS_ID, reply)\n          REQUESTS_ID: this.state.requestIdToReplyTo,\n          reply: this.state.replyBody,\n        }),\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        }\n      })\n      .then(r => {\n        return window.location.replace('/')\n      })\n\n    }\n  }\n\n}\n\nexport default SuperUser;","import React, { Component } from 'react';\nimport CompletedRequest from './CompletedRequest';\n\nclass UsersCompletedRequests extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    }\n  }\n  async componentDidMount() {\n    await fetch(`/api/usersCompletedRequests`)\n      .then(r => r.json())\n      .then(z => {\n        this.setState({\n          list: z\n        })\n      })\n  }\n  render() {\n    return (\n      <div className='completed-requests'>\n        {this.state.list.map(item => {\n          return (<CompletedRequest data={item} />)\n        })}\n      </div>\n    )\n  }\n}\n\nexport default UsersCompletedRequests;","import React, { Component } from 'react';\n\nimport Request from './Request';\nimport CheckoutForm from './CheckoutForm';\nimport SuperUser from './SuperUser';\nimport UsersCompletedRequests from './UsersCompletedRequests';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayname: '',\n      isSuper: false,\n      loggedIn: false,\n      list: []\n    }\n  }\n  async componentDidMount() {\n    await fetch('/api/userRequests/')\n      .catch(err => console.log(err))\n      .then(r => {\n        return (r.json())\n      })\n      .then(dataSource => {\n        this.setState({\n          list: [...dataSource, ...this.state.list]\n        })\n        return dataSource\n      })\n      .then(z => {\n        fetch('/api/loggedin')\n          .catch(err => {\n            console.log(err)\n          })\n          .then(v => {\n            return (v.json());\n          })\n          .then(data => {\n            if (data) {\n              this.setState({\n                displayname: data.name,\n                loggedIn: true\n              })\n            } else {\n              console.log('move along');\n            }\n            if (data.is_super) {\n              this.setState({\n                isSuper: true\n              })\n            }\n          })\n      })\n  }\n\n  render(props) {\n    return (\n      <>\n        <div className='requests-form'>\n          {this.state.isSuper && <SuperUser />}\n        </div>\n        <div className=\"example\">\n          <CheckoutForm />\n        </div>\n        <div className='completed-requests-zone'>\n          <h3>Your Replied Requests</h3>\n          <UsersCompletedRequests />\n        </div>\n        <div className='requests-zone'>\n          <h3 >Your Sent Requests</h3>\n          <div className='request-wrapper'>\n            {this.state.list.map(request => {\n              return <Request key={request.id} data={request} />\n            })\n            }\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\n{/* <div className='request-card'>\n      <div className='request-title'>\n        {props.data.title}\n      </div>\n      <div className='request-body'>\n        <p>{props.data.request_contents}</p>\n      </div>\n      <div className='request-recipient'>from:{props.data.user_id_from}</div>\n    </div> */}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Link\n} from 'react-router-dom';\n\nimport CompletedRequests from './components/CompletedRequests';\nimport HeroSpacer from './components/HeroSpacer';\nimport LoginSystem from './components/LoginSystem';\nimport Dashboard from './components/Dashboard';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <LoginSystem />\n          <Route path='/' exact component={HeroSpacer} />\n          <Route path='/' exact component={CompletedRequests} />\n          <Route path='/dashboard' exact component={Dashboard} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}